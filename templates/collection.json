{% whitespace oneline %}
{% from edr_server.core.models import EdrDataQuery %}
{
  "links": [
    {
      "href": "{{ reverse_url_full('service-desc') }}",
      "hreflang": "en",
      "rel": "service-doc",
      "type": "text/html",
      "title": ""
    },
    {
      "href": "{{ reverse_url_full('service-license') }}",
      "hreflang": "en",
      "rel": "licence",
      "type": "text/html",
      "title": ""
    },
    {
      "href": "{{ reverse_url_full('service-terms') }}",
      "hreflang": "en",
      "rel": "restrictions",
      "type": "text/html",
      "title": ""
    },
    {
      "href": "{{ reverse_url_full('collection', collection.id) }}",
      "hreflang": "en",
      "rel": "collection",
      "type": "collection",
      "title": "Collection"
    }{% if collection.supported_data_queries %},{% end %}
    {% set data_query_count = len(collection.supported_data_queries) %}
    {% for i, query_type in enumerate(collection.supported_data_queries, 1) %}
    {
      "href": "{{ reverse_url_full('position_query', collection.id) }}",
      "hreflang": "en",
      "rel": "data",
      "type": "position",
      "title": "Position"
    }{% if i < data_query_count %},{% end %}
    {% end %}

  ],
  "id": "{{ collection.id }}",
  "title": "{{ collection.title }}",
  "description": "{{ collection.description }}",
  {% set kw_count = len(collection.keywords) %}
  "keywords": [
    {% for i, keyword in enumerate(collection.keywords, 1) %}
    "{{ keyword }}"{%if i < kw_count %},{% end %}
    {% end %}
  ],
  "extent": {
    "spatial": {
      {% set corner_count = len(collection.extent.spatial.bounds) %}
      "bbox": [
        {% for i, corner in enumerate(collection.extent.spatial.bounds, 1) %}
        {{ corner }}{% if i < corner_count %},{% end %}
        {% end %}
      ],
      "crs": "{{ collection.crs }}",
      "name": "{{ collection.crs.name }}"
    }{% if collection.extent.temporal %},
      "temporal": {% raw json_encoder.encode(collection.extent.temporal) %}
    {% end %}
    {% if collection.extent.vertical %},
      {% include "collection_extent_vertical.json" %}
    {% end %}
  },
  "data_queries": {

    {% if EdrDataQuery.POSITION in collection.supported_data_queries %}{% include "collection_position.json" %}{% end %}
    {% if EdrDataQuery.RADIUS in collection.supported_data_queries %}{% include "collection_radius.json" %}{% end %}
    {% if EdrDataQuery.AREA in collection.supported_data_queries %}{% include "collection_area.json" %}{% end %}
    {% if EdrDataQuery.CUBE in collection.supported_data_queries %}{% include "collection_cube.json" %}{% end %}
    {% if EdrDataQuery.TRAJECTORY in collection.supported_data_queries %}{% include "collection_trajectory.json" %}{% end %}
    {% if EdrDataQuery.CORRIDOR in collection.supported_data_queries %}{% include "collection_corridor.json" %}{% end %}
    {% if EdrDataQuery.LOCATIONS in collection.supported_data_queries %}{% include "collection_locations.json" %}{% end %}
    {% if EdrDataQuery.ITEMS in collection.supported_data_queries %}{% include "collection_items.json" %}{% end %}
  },
  "crs": [
    "{{ collection.extent.spatial.crs }}"
  ],
  "output_formats": [
    "CoverageJSON"
  ],
  {% set param_count = len(collection.parameters) %}
  "parameter_names": {
    {% for i, parameter in enumerate(collection.parameters, 1) %}
    {% module Template("parameter.json", parameter=parameter) %}{% if i < param_count %},{% end %}
    {% end %}
  }
}